// This was copied from https://github.com/GoogleCloudPlatform/df-ml-anomaly-detection/blob/master/build.gradle
// and probably contains a lot of useless stuff.

buildscript {
    ext {
        dataflowBeamVersion = '2.35.0'
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        dependencies {
            classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
        }
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.google.cloud.tools.jib'

sourceCompatibility = 1.8
targetCompatibility = 1.8
applicationDefaultJvmArgs = ['-Xms4g', '-Xmx16g']
mainClassName = System.getProperty('mainClass', 'com.epoca.Generator')

group 'com.epoca'
version '0.0.1'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
   mavenCentral()
   maven {
       url = "https://packages.confluent.io/maven/"
   }
   flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation group: 'org.apache.beam', name: 'beam-sdks-java-core', version: dataflowBeamVersion
    implementation group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: dataflowBeamVersion
    implementation group: 'org.apache.beam', name: 'beam-runners-direct-java', version: dataflowBeamVersion
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.5'
    implementation group: 'org.apache.beam', name: 'beam-sdks-java-extensions-zetasketch', version: dataflowBeamVersion
    implementation "com.google.auto.value:auto-value-annotations:1.6.2"
    annotationProcessor "com.google.auto.value:auto-value:1.6.2"
    implementation 'com.google.cloud:google-cloud-storage:1.98.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.0'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.4.0'
    implementation 'commons-net:commons-net:3.6'
    implementation group: 'com.google.cloud', name: 'google-cloud-dlp', version: '1.1.4'
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.30.9'
    implementation group: 'com.google.apis', name: 'google-api-services-discovery', version: 'v1-rev134-1.25.0'
    testImplementation group: 'org.apache.beam', name: 'beam-runners-direct-java', version: dataflowBeamVersion
    testImplementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.5'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation 'junit:junit:4.12'
}

jar {
    manifest {
        attributes ('Main-Class': mainClassName)
    }
}

compileJava {
    options.compilerArgs.addAll(['-Xlint:all', '-Xlint:-serial'])
    options.encoding = 'UTF-8'
}

// default tasks when you run ./gradlew
defaultTasks 'clean', 'assemble'

// Google Cloud Dataflow requires the resource/main directory to exist
task resources {
    def resourcesDir = new File('build/resources/main')
    resourcesDir.mkdirs()
}

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s')
    }
    mustRunAfter 'resources'
}

jib {
  from {
    image = 'gcr.io/dataflow-templates-base/java8-template-launcher-base:latest'
  }
  container {
    appRoot = '/template/df-log-streaming-template'
    entrypoint = 'INHERIT'
	environment = [DATAFLOW_JAVA_COMMAND_SPEC:'/template/df-log-streaming-template/resources/java_command_spec.json']
  }
}
